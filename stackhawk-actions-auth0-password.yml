app:
  # Update your applicationId
  applicationId: ${APP_ID}
  env: ${APP_ENV:GitHub Actions}
  host: ${APP_HOST:https://localhost:9000}
  excludePaths:
    - "/logout"
  #    - "/login-form-multi"
  #    - "/login-code"
  #antiCsrfParam: "_csrf"
  authentication:
    loggedInIndicator: "HTTP.*2[0-9][0-9]\\s*O[kK](\\s*)|HTTP.*3[0-9][0-9].*"
    loggedOutIndicator: "HTTP.*4[0-9][0-9](\\s*)Unauthorized.*"
    script:
      name: auth0-resource-owner-password.js
      parameters:
        issuer: ${ISSUER} #https://${YOUR_AUTH0_DOMAIN}.us.auth0.com/oauth/token
        grant_type: password
        audience: ${API_AUDIENCE}
      credentials:
        client_id: ${CLIENT_ID}
        client_secret: ${CLIENT_SECRET}
        username: ${USERNAME}
        password: ${PASSWORD}
    tokenAuthorization:
      type: HEADER
      value: Authorization
      tokenType: Bearer
    tokenExtraction:
      type: TOKEN_PATH
      value: "access_token"
    testPath:
      path: /api/jwt/items/search/i
      success: ".*200.*"
#    testPath:
#      path: /search
#      success: "HTTP.*200.*"
    # Utilize OpenAPI Spec, Custom data & Faker
    openApiConf:
    # path: /openapi
    filePath: openapi.yaml
    fakerEnabled: true #default false
    # includeAllMethods: true
    includedMethods:
      - POST
      - PUT
    customVariables:
      - field: text
        values:
          - "$faker:uuid"
      - field: searchText
        values:
          - "$faker:Crypto.sha512"
          - "Donec ullamcorper nulla non metus auctor fringilla."
      - field: username
        values:
          - "Andy Dwyer"
      - field: password
        values:
          - "$faker:password"
hawk:
  spider:
    maxDurationMinutes: 5
tags:
  - name: _STACKHAWK_GIT_COMMIT_SHA
    value: ${COMMIT_SHA:}
  - name: _STACKHAWK_GIT_BRANCH
    value: ${BRANCH_NAME:}
hawkAddOn:
  scripts:
    - name: auth0-resource-owner-password.js
      language: JAVASCRIPT
      type: authentication
